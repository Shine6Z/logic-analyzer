/**
@brief Developer's Guide for Logic Analyzer RPi

@author superzerg

@file 

@mainpage Developer's Guide for Logic Analyzer RPi
This guide has been made so you can more easily adapt the  Logic Analyzer RPi software for your needs and contribute to it.

The classes used are:
1. [logic_input](@ref logic_input): takes care of acquisition from Raspberry pi's GPIO pins and method to draw it
2. [activity](@ref activity): contains chip enable periods obtained from logic_input and method to draw it
3. [transition](@ref transition): contains the acquisition time of the clock transitions obtained from logic_input and methods to draw it.
4. [binary](@ref binary): contains the bit obtained from logic_input and methods to draw it.
5. [message](@ref message): contains decoded information. 

A [message](@ref protocol) must be used for the conversion from activity and/or transition and at least one binary to a message.
The following classes are implemented protocols:
- [microwire](@ref microwire)
- [raw](@ref raw)

If you want to decode anything else, you need to create your own protocol
There is a few rules to follow (this may evolve).
1. A protocol herit from protocol.
2. A protocol must redefine:
- decode() function initializing all members from the capture object
- Draw() function calling all the necessary Draw() functions of his members
\sa protocol microwire raw
*/
