/**
@brief Developper Guide for Logic Analyzer RPi

@author superzerg

@file 

@mainpage Developper Guide for Logic Analyzer RPi
This guide has been made so you can more easily addapt the  Logic Analyzer RPi software for your needs and contibute to it.

The classes used are:
1. [logic_input](@ref logic_input): takes care of acquisition from Raspberry pi's GPIO pins and method to draw it
2. [activity](@ref activity): contains chip enable periods obtained from logic_input and method to draw it
3. [transition](@ref transition): contains the aquisition time of the clock transitions obtained from logic_input and methods to draw it.
4. [binary](@ref binary): contains the bit obtained from logic_input and methods to draw it.
5. [message](@ref message): contains decoded information. 

A protocol must be used for the conversion from activity and/or transition and at least one binary to a message.
The following classes are implemented protocols:
- [microwire](@ref microwire)

If you want to decode anthing else, you need to create your own protocol
There is a few rules to follow (this may evolve).
1. A protocol has a logic_input and an array of [message](@ref message) as member.
2. A protocol has a constructor with 2 parameter:
    \param pins is an array of uint8_t corresponging to the GPIO pins used. 
    \param npin is the size of the pins array.
The order of the pin determines their function.
3. A protocol has a Draw() function calling all the necessary Draw() functions of his members
\sa microwire::microwire()
*/
